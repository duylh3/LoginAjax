//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ideal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IdealDbEntities : DbContext
    {
        public IdealDbEntities()
            : base("name=IdealDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_Answers> tb_Answers { get; set; }
        public virtual DbSet<tb_Categories> tb_Categories { get; set; }
        public virtual DbSet<tb_Document> tb_Document { get; set; }
        public virtual DbSet<tb_Employee> tb_Employee { get; set; }
        public virtual DbSet<tb_Questions> tb_Questions { get; set; }
        public virtual DbSet<tb_User> tb_User { get; set; }
    
        public virtual ObjectResult<GetAnswer_Result> GetAnswer(Nullable<int> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAnswer_Result>("GetAnswer", questionIdParameter);
        }
    
        public virtual ObjectResult<GetDocumentDetail_Result> GetDocumentDetail(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocumentDetail_Result>("GetDocumentDetail", idParameter);
        }
    
        public virtual ObjectResult<GetDocumentList_Result> GetDocumentList(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDocumentList_Result>("GetDocumentList", categoryParameter);
        }
    
        public virtual ObjectResult<GetHistory_Result> GetHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHistory_Result>("GetHistory");
        }
    
        public virtual ObjectResult<GetList_Result> GetList(Nullable<int> page, Nullable<int> pageSize, string caregory, ObjectParameter rowNum)
        {
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var caregoryParameter = caregory != null ?
                new ObjectParameter("Caregory", caregory) :
                new ObjectParameter("Caregory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetList_Result>("GetList", pageParameter, pageSizeParameter, caregoryParameter, rowNum);
        }
    
        public virtual ObjectResult<GetQuestionById_Result> GetQuestionById(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionById_Result>("GetQuestionById", categoryIdParameter);
        }
    
        public virtual ObjectResult<GetQuestionList_Result> GetQuestionList(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionList_Result>("GetQuestionList", categoryParameter);
        }
    
        public virtual int InsertQuestion(Nullable<int> categoryId, string question, Nullable<int> createdBy)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQuestion", categoryIdParameter, questionParameter, createdByParameter);
        }
    
        public virtual int InsertUser(string username, string password, Nullable<int> createdBy)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUser", usernameParameter, passwordParameter, createdByParameter);
        }
    
        public virtual ObjectResult<SearchQuestion_Result> SearchQuestion(string keySearch)
        {
            var keySearchParameter = keySearch != null ?
                new ObjectParameter("KeySearch", keySearch) :
                new ObjectParameter("KeySearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchQuestion_Result>("SearchQuestion", keySearchParameter);
        }
    
        public virtual ObjectResult<UserLogin_Result> UserLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin_Result>("UserLogin", usernameParameter, passwordParameter);
        }
    }
}
